/*!
drag-listener v0.0.0 
Javascript component to fire x/y coordinates for drag actions
Build time: Mon May 20 2013 15:35:15 GMT+0100 (BST)
*/

(function(){var __bind=function(fn,me){return function(){return fn.apply(me,arguments)}},__hasProp={}.hasOwnProperty,__extends=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)__hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child};define("DragListener",["EventEmitter","mootools"],function(EventEmitter){var DragListener;return DragListener=function(_super){function DragListener(el){this.el=el,this.pointerMove=__bind(this.pointerMove,this),this.removeDragable=__bind(this.removeDragable,this),this.makeDragable=__bind(this.makeDragable,this),this.getEvents=__bind(this.getEvents,this),DragListener.__super__.constructor.call(this),this.el.addEvents({mousedown:this.makeDragable,touchstart:this.makeDragable})}return __extends(DragListener,_super),DragListener.prototype.getEvents=function(){var events;return events={mouseup:this.removeDragable,touchend:this.removeDragable,mousemove:this.pointerMove,touchmove:this.pointerMove}},DragListener.prototype.makeDragable=function(event){return event.preventDefault(),window.addEvents(this.getEvents()),this.dragable=!0,this.delta={x:event.client.x.toInt(),y:event.client.y.toInt()},this.fireEvent("dragstart",this.delta)},DragListener.prototype.removeDragable=function(){return this.dragable=!1,window.removeEvents(this.getEvents()),this.fireEvent("dragend",this.delta)},DragListener.prototype.pointerMove=function(event){var deltaX,deltaY;if(this.dragable)return deltaX=this.delta.x.toInt()-event.client.x.toInt(),deltaY=this.delta.y.toInt()-event.client.y.toInt(),this.fireEvent("dragmove",{x:deltaX,y:deltaY}),this.delta={x:event.client.x.toInt(),y:event.client.y.toInt()}},DragListener}(EventEmitter)})}).call(this);